name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
  release:
    types: [published]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # minimal
            type=match,pattern=v(.*),group=1,value=${{ github.ref_name }},enable=${{ github.event_name == 'release' }}
            # branch event
            type=ref,event=branch
          flavor: |
            latest=false

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          # build-args: 
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  trigger-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Deploy Service Workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -X POST -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: token $GITHUB_TOKEN" \
        https://api.github.com/repos/Vistaar-Org/devops/actions/workflows/deploy.yaml/dispatches \
        -d '{"ref":"main","inputs":{"environment":"dev","services":"imd_api"}}'